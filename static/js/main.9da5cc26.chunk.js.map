{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","layouts/Header.js","App.js","serviceWorker.js","index.js"],"names":["Pokemon","pokemon","this","props","poke","type","console","log","className","Card","filter","style","marginTop","width","backgroundColor","backdropFilter","Header","Image","src","img","roundedCircle","marginLeft","transform","marginBottom","Body","Title","name","Text","map","t","height","weight","Component","PokeList","pokemons","Container","margin","CardDeck","p","Navbar","paddingBottom","variant","Brand","alt","App","state","axios","get","then","res","setState","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yRAwEeA,E,iLAlEX,IAAMC,EAAUC,KAAKC,MAAMC,KACnBC,EAASJ,EAATI,KAER,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,OACb,kBAACC,EAAA,EAAD,CACEC,OAAQ,cACRC,MAAO,CACLC,UAAW,OACXC,MAAO,OACPC,gBAAiB,qBACjBC,eAAgB,cAElBP,UAAU,aAEV,kBAACC,EAAA,EAAKO,OAAN,CACEL,MAAO,CACLG,gBAAiB,uBAInB,6BACA,6BACA,6BACA,6BASE,kBAACG,EAAA,EAAD,CACEC,IAAG,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAASkB,IACdC,eAAa,EACbT,MAAO,CAGLU,WAAY,MACZC,UAAW,uBACXC,aAAc,YAWtB,kBAACd,EAAA,EAAKe,KAAN,CAAWhB,UAAU,iBACnB,kBAACC,EAAA,EAAKgB,MAAN,YAAaxB,QAAb,IAAaA,OAAb,EAAaA,EAASyB,MACtB,kBAACjB,EAAA,EAAKkB,KAAN,KACE,oCAAUtB,EAAKuB,KAAI,SAAAC,GAAC,OAAIA,EAAI,SAC5B,sCAAY5B,EAAQ6B,QACpB,sCAAY7B,EAAQ8B,gB,GA5DZC,a,gBC6BPC,E,iLA1BH,IAAD,IAEHhC,EAQJ,OAPA,UAAIC,KAAKC,aAAT,aAAI,EAAY+B,YACdjC,EAAUC,KAAKC,MAAM+B,SAErB5B,QAAQC,IAAI,YACZD,QAAQC,IAAIN,IAIZ,kBAACkC,EAAA,EAAD,CAAWxB,MAAO,CAAEyB,OAAQ,SAE1B,kBAACC,EAAA,EAAD,eAEGpC,SAFH,aAEG,EAAS2B,KAAI,SAAAU,GAAC,OACb,kBAAC,EAAD,CAASlC,KAAMkC,a,GAjBJN,a,yBC8BRhB,MAhCf,WACE,OACE,yBAAKR,UAAU,iBAEb,kBAAC+B,EAAA,EAAD,CACE5B,MAAO,CACLI,eAAgB,aAChBD,gBAAiB,qBACjB0B,cAAe,QAIjBC,QAAQ,QAGR,kBAACF,EAAA,EAAOG,MAAR,KACE,yBACEC,IAAI,GAGJzB,IAAI,qjBACJL,MAAM,KACNiB,OAAO,KACPtB,UAAU,6BAEX,KAVH,iBCyBOoC,E,2MArCbC,MAAQ,CACNX,SAAU,I,mFAWS,IAAD,OAClBY,IACGC,IACC,iFAEDC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,EAAIE,Y,+BAGrC,IACAlD,EAAYC,KAAK2C,MAAMX,SAAvBjC,QACR,OACE,6BAIE,kBAAC,EAAD,MACA,6BACE,kBAAC,EAAD,CAAUiC,SAAUjC,U,GA9BZ+B,aCOEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMf,MAAK,SAAAgB,GACjCA,EAAaC,kB","file":"static/js/main.9da5cc26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\n\r\nclass Pokemon extends Component {\r\n  render() {\r\n    // console.log(this.props.pokemon);\r\n    const pokemon = this.props.poke;\r\n    const { type } = pokemon;\r\n    console.log(type);\r\n    return (\r\n      <div className='col'>\r\n        <Card\r\n          filter={'blur(20px) '}\r\n          style={{\r\n            marginTop: '20px',\r\n            width: '100%',\r\n            backgroundColor: 'rgba(37,37,37,0.5)',\r\n            backdropFilter: 'blur(10px)'\r\n          }}\r\n          className='shadow-lg'\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: 'rgba(54,54,54,0.5)'\r\n            }}\r\n          >\r\n            {/* {pokemon.} */}\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div>\r\n              {/* <Card.Img\r\n                variant='top'\r\n                src={'https://www.htmlcsscolor.com/preview/gallery/363636.png'}\r\n                style={{ textAlign: 'center' }}\r\n                roundedCircle\r\n                // thumbnail\r\n              /> */}\r\n\r\n              <Image\r\n                src={pokemon?.img}\r\n                roundedCircle\r\n                style={{\r\n                  // textAlign: 'center',\r\n                  // marginTop: '5%',\r\n                  marginLeft: '50%',\r\n                  transform: 'translate(-50%,-75%)',\r\n                  marginBottom: '-50%'\r\n                }}\r\n                // width={100}\r\n                // height={100}\r\n                // className='text-center mr-3'\r\n                // thumbnail\r\n              />\r\n            </div>\r\n          </Card.Header>\r\n          {/* </Col> */}\r\n\r\n          <Card.Body className='text-white-50'>\r\n            <Card.Title>{pokemon?.name}</Card.Title>\r\n            <Card.Text>\r\n              <p>Type: {type.map(t => t + ', ')}</p>\r\n              <p>Height: {pokemon.height}</p>\r\n              <p>Weight: {pokemon.weight}</p>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport Container from '@material-ui/core/Container';\r\nimport { CardDeck } from 'react-bootstrap';\r\n\r\nclass PokeList extends Component {\r\n  render() {\r\n    // this.setState({ po: pokemon });\r\n    let pokemon;\r\n    if (this.props?.pokemons) {\r\n      pokemon = this.props.pokemons;\r\n      // const pokemon = this.props.pokemons;\r\n      console.log('Pokelist');\r\n      console.log(pokemon);\r\n    }\r\n\r\n    return (\r\n      <Container style={{ margin: 'auto' }}>\r\n        {/* <div style={{ margin: 'auto' }}> */}\r\n        <CardDeck>\r\n          {/* <Pokemon /> */}\r\n          {pokemon?.map(p => (\r\n            <Pokemon poke={p} />\r\n          ))}\r\n        </CardDeck>\r\n        {/* </div> */}\r\n      </Container>\r\n    );\r\n    // return pokemon?.map(poke => <Pokemon pokemon={poke} />);\r\n  }\r\n}\r\n\r\nexport default PokeList;\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nfunction Header() {\r\n  return (\r\n    <div className='center-navbar'>\r\n      {/* <Navbar bg='dark' variant='dark'> */}\r\n      <Navbar\r\n        style={{\r\n          backdropFilter: 'blur(10px)',\r\n          backgroundColor: 'rgba(20,20,20,0.7)',\r\n          paddingBottom: '15px'\r\n          // marginBottom: '100px'\r\n          // marginBottom: '100px'\r\n        }}\r\n        variant='dark'\r\n        // fixed='top'\r\n      >\r\n        <Navbar.Brand>\r\n          <img\r\n            alt=''\r\n            // https://www.pikpng.com/pngl/m/59-590020_pokeball-png-photo-clipart.png\r\n            // https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/950cb3ae-f4e7-486e-9058-724c66bd7961/d7e57f0-a56ceb42-3c44-48d9-97dd-9b288b2c3e07.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzk1MGNiM2FlLWY0ZTctNDg2ZS05MDU4LTcyNGM2NmJkNzk2MVwvZDdlNTdmMC1hNTZjZWI0Mi0zYzQ0LTQ4ZDktOTdkZC05YjI4OGIyYzNlMDcucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.6Y_fhBzzr2RnT2gX2PC7AWMNzw7BtULrxOmSQkd9BpA\r\n            src='https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/950cb3ae-f4e7-486e-9058-724c66bd7961/d7e57f0-a56ceb42-3c44-48d9-97dd-9b288b2c3e07.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzk1MGNiM2FlLWY0ZTctNDg2ZS05MDU4LTcyNGM2NmJkNzk2MVwvZDdlNTdmMC1hNTZjZWI0Mi0zYzQ0LTQ4ZDktOTdkZC05YjI4OGIyYzNlMDcucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.6Y_fhBzzr2RnT2gX2PC7AWMNzw7BtULrxOmSQkd9BpA'\r\n            width='30'\r\n            height='30'\r\n            className='d-inline-block align-top'\r\n          />\r\n          {'  '}\r\n          Pok√©dex\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport PokeList from './components/PokeList';\nimport axios from 'axios';\nimport Header from './layouts/Header';\n\nclass App extends Component {\n  state = {\n    pokemons: {}\n  };\n\n  // getPokemons = async () => {\n  //   let res = await axios.get(\n  //     'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\n  //   );\n  //   let { pokeData } = res.data;\n  //   this.setState({ pokemons: pokeData });\n  // };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\n      )\n      .then(res => this.setState({ pokemons: res.data }));\n  }\n\n  render() {\n    const { pokemon } = this.state.pokemons;\n    return (\n      <div>\n        {/* {this.state.pokemons === {} ? (\n          <div>Loading...</div>\n        ) : ( */}\n        <Header />\n        <div>\n          <PokeList pokemons={pokemon} />\n        </div>\n        {/* )} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}